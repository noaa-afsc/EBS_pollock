---
output: html
title: "Eastern Bering Sea walleye pollock stock assessment"
subtitle: May 2025, CIE review
author: "Jim Ianelli and Carey McGilliard"
date: April 2025
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 90
---

```{r startup, echo=FALSE, warnings=FALSE, message=FALSE, eval=TRUE}
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(plotly)
library(r4ss)
library(ggridges)
library(ebswp)
library(tidyverse)
library(patchwork)
library(gganimate)
library(ggridges)
library(viridis)
# Set ggplot theme
#devtools::install_github("seananderson/ggsidekick")
library(ggsidekick)
theme_set(theme_sleek())
library(reshape2)
.OVERLAY <- TRUE
.THEME <- ggthemes::theme_few()
options(warn = -1)
do_sigmaR_profile=0
do_ft=0
do_abc_sel=0
do_yearloop=0
do_srrlst=0
do_selsens=0

Plot_Sel <- function(sel = all_sel, fage = 1, lage = 13, nages = 15, styr = 1964, endyr = 2024) {
  sdf <- pivot_longer(sel, names_to = "age", values_to = "sel", cols = 2:(nages + 1)) |>
    filter(Year >= styr, Year <= endyr) |>
    mutate(age = as.numeric(age))
  p1 <- sdf |> ggplot(
    aes(x = age, y = as.factor(Year), height = sel)
  ) +
    geom_density_ridges(
      stat = "identity", scale = 2.8,
      alpha = .3, fill = "goldenrod", color = "tan"
    ) +
    ggthemes::theme_few() +
    ylab("Year") +
    xlab("Age (years)") +
    scale_x_continuous(limits = c(fage, lage), breaks = fage:lage) +
    scale_y_discrete(limits = rev(levels(as.factor(sdf$Year)))) +
    facet_grid(. ~ source)
  return(p1)
}

loadup<-FALSE
#loadup<-TRUE
if (loadup){
  #source(here::here("GetResults.R"))
  
  ra <- SS_obj(SS_output(dir = here("ss","noramp"),verbose=FALSE),src="noramp") 
  r2 <- SS_obj(SS_output(dir = here("ss","mod")),src="mod")  
  r3 <- SS_obj(SS_output(dir = here("ss","mix")),src="mix")  
  r4 <- SS_obj(SS_output(dir = here("ss","high")),src="high")  
  #r5 <- SS_obj(SS_output(dir = here("ss","autocor")),src="autocor")  
  ss_sel <- rbind(r1$sel,r2$sel,r3$sel,r4$sel)#,r5$sel)
  #compute_matrix_summary(sel[,2:16])
  gp_run<-gp_obj()
  pm_run<-pm_obj()
  pm_run2<-pm_obj(pm2, src="Pollock_model VPA-like")
  load(here("SAM","poll23","run","model2.RData"))
  sam_run <- SAM_obj()
  am_run<-AMAK_obj(run_dir=here("amak2","runs", "base"))
  am_run2<-AMAK_obj(run_dir=here("amak2","runs", "3par"),src="AMAK-3par-logistic")
  am_run3<-AMAK_obj(run_dir=here("amak2","runs", "cpue"),src="AMAK w CPUE", nind=6)
  all_sel <- rbind(sam_run$sel,pm_run$sel,am_run$sel,ss_run$sel,gp_run$sel)
  all_ts <- rbind( sam_run$ts,pm_run$ts,am_run$ts,ss_run$ts,gp_run$ts)
  save.image(file=here::here("compares.Rdata"))
} else {
 # load(here::here("compares.Rdata"))
}

``` 


# Executive Summary

The work presented below was based on the same data sets used in the 2024 assessment. The first task was to update the model runs to include the 2023 data. The model runs were updated and the results are presented below. The model runs were then used to compare the FT-NIR data with the traditional data sources (BTS and ATS). The results of these comparisons are presented below. The model fits to the data are presented in the tables at the end of the document. 

## Summary of Results


```{r data}
#| echo: false
#| warnings: FALSE
#| messages: FALSE
#| label: fig-data
#| fig.cap: "Data extent by age composition and model runs."
# Sample data
df <- data.frame(
  type = factor(c("Fishery-TMA", "Fishery-FTN", "BTS-TMA", "BTS-FTN","ATS-TMA","ATS-FTN"),
    levels     =c("Fishery-TMA", "Fishery-FTN", "BTS-TMA", "BTS-FTN","ATS-TMA","ATS-FTN")),
  start_year = c(1964, 2016, 1982, 2014, 1994, 2014),
  end_year   = c(2015, 2023, 2013, 2023, 2013, 2023)
)
# Plot
ggplot(df, aes(y = type,color=type)) +
  geom_segment(aes(x = start_year, xend = end_year, y = type, yend = type), 
               linewidth = 5) +
  scale_x_continuous(breaks = seq(1960, 2025, 5)) +
  theme_minimal() + theme(legend.position = "none") +
  labs(title = "Coverage of years by type, EBS pollock", x = "Years", y = "Type")

```

```{r ft1}
#| echo: false
#| warnings: FALSE
#| messages: FALSE
#| label: fig-ft1
#| fig.cap: "Model results comparing last year's selected model -2021)"
if (do_ft) {
  source(here::here("R","pm_CIE.R"))
  saveRDS(modlst, here::here("runs", "ftnir.rds"))
} else{
  modlst <- readRDS(here::here("runs", "ftnir.rds"))
}
#plot_srr(modlst[c(1,3)], alpha = .2, xlim = c(0, 4200), ylim = c(0, 95000), sizeout = 3, sizein = 3, yrsin = c(1964:2021), ebar = TRUE)
plot_avo(modlst[c(2,4)]) +scale_x_continuous(limits=c(2005,2025),breaks=seq(2006,2025,2)) 
plot_ats(modlst[c(2,4)]) +
 scale_x_continuous(limits=c(2005,2025),breaks=seq(2006,2025,2)) +
  ggthemes::theme_few()
  
plot_bts(modlst[c(2,4)],xlim=c(1980.5, 2024.5))
plot_mnage(modlst[c(2,3)],xlim=c(1980.5, 2022.5), ylim=c(3,7.5)) + 
  ggthemes::theme_few(base_size = 15) + facet_grid(type ~ .,scales='free') + 
  scale_x_continuous(limits=c(2010.5,2025),breaks=seq(2010,2025,2)) 

plot_ser(modlst[c(2,3)],xlim=c(1980.5, 2022.5),ylim=c(0,.33))
plot_Nage_3(modlst[c(2,4)],xlim=c(1980.5, 2022.5))
#plot_recruitment(modlst[c(3,4)])
p1 <- plot_recruitment(modlst[c(4,3)],xlim=c(1980.5, 2022.5))
p2 <- plot_ssb(modlst[c(4, 3)], xlim = c(1979.5, 2024.5), 
               breaks = seq(1964, 2024, by = 4), alpha = .2); p2
p1/p2
plot_agefit(modlst[[2]],case_label="Base")
plot_agefit(modlst[[3]],case_label=names(modlst)[3]) 
plot_agefit(modlst[[2]],case_label=names(modlst)[2],gear="ats","Acoustic survey")
plot_agefit(modlst[[2]],case_label=names(modlst)[3],gear="ats","Acoustic survey")
plot_agefit(modlst[[4]],case_label=names(modlst)[4],gear="ats","Acoustic survey")
plot_agefit(modlst[[1]],case_label=names(modlst)[1],gear="fsh",type="fishery",styr=1980) 
plot_agefit(modlst[[3]],case_label=names(modlst)[3],gear="fsh",type="fishery",styr=1980) 
```

# Comparing FT-NIR compositions with traditional methods

```{r comp_bts}
#| echo: false
#| warnings: FALSE
#| messages: FALSE
#| label: fig-comp_bts
#| fig.cap: "Model results comparing last year's selected model -2021)"
# Set working directory & plot save directory
this_year <- 2024
# Read in proportions & shape for plotting
proportions <- data.frame(modlst[[2]]$pobs_bts)
prop_ftnir <- data.frame(modlst[[3]]$pobs_bts)

names(prop_ftnir)[1:16] <- c("Year",1:15)
names(proportions)[1:16] <- c("Year",1:15)
props <- pivot_longer(proportions, cols=2:16, 
              names_to = "Age", values_to = "Proportion") |>
  mutate(Age=as.numeric(Age))
prop_ftnir <- pivot_longer(prop_ftnir, cols=2:16, 
              names_to = "Age", values_to = "Proportion") |> mutate(Age=as.numeric(Age))
props <- rbind(props,data.frame(Year=2020,Age=1,Proportion=0))
# Only EBS age comp
props_ebs <- props %>% 
  arrange(Year, Age)
props_ftnir <- prop_ftnir %>% 
  arrange(Year, Age)
# Set up shifting colors for each year to track cohorts
colors <- rep(1:16, length(1982:2024))

props_ebs$color <- colors[1:nrow(props_ebs)]
props_ftnir$color <- colors[1:nrow(props_ftnir)]

prop_plot <- ggplot(props_ebs, aes(x = Age, y = Proportion, fill = color)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_line(data = props_ftnir, aes(x = Age, y = Proportion),  size = .5) +  
  scale_fill_viridis(option = "turbo") +
  scale_x_continuous(breaks = c(1, 5, 10, 15)) +
  scale_y_continuous(limits = c(0, 0.5), breaks = c(0, 0.2, 0.4)) +
  ylab("Proportion") + 
  guides(fill = "none") +
  facet_wrap(~ Year, ncol = 4, dir = "v") +
  theme(strip.text.x = element_blank()) +
  geom_text(x = 13, y = 0.45, aes(label = Year), color = "grey30", size = 2.8)
prop_plot

#ggsave(prop_plot, filename = here(save_dir, "Age_comp.png"), width=120, height=180, units="mm", dpi=300)

```

```{r comp_fsh}
#| echo: false
#| warnings: FALSE
#| messages: FALSE
#| label: fig-comp_fsh
#| fig.cap: "Model results comparing last year's selected model -2021)"
# Read in proportions & shape for plotting
proportions <- data.frame(modlst[[1]]$pobs_fsh)
prop_ftnir <- data.frame(modlst[[3]]$pobs_fsh)

names(prop_ftnir)[1:16] <- c("Year",1:15)
names(proportions)[1:16] <- c("Year",1:15)
props <- pivot_longer(proportions, cols=2:16, 
              names_to = "Age", values_to = "Proportion") |> mutate(Age=as.numeric(Age))
prop_ftnir <- pivot_longer(prop_ftnir, cols=2:16, 
              names_to = "Age", values_to = "Proportion") |> mutate(Age=as.numeric(Age))
#props <- rbind(props,data.frame(Year=2020,Age=1,Proportion=0))
# Only EBS age comp
props_ebs <- props %>% filter(Year>1979) |> 
  arrange(Year, Age)
props_ftnir <- prop_ftnir %>% filter(Year>1979) |> 
  arrange(Year, Age)

# Set up shifting colors for each year to track cohorts
colors <- rep(1:16, length(1980:2023))

props_ebs$color <- colors[1:nrow(props_ebs)]
props_ftnir$color <- colors[1:nrow(props_ftnir)]

prop_plot <- ggplot(props_ebs, aes(x = Age, y = Proportion, fill = color)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_line(data = props_ftnir, aes(x = Age, y = Proportion),  size = .5) +  
  scale_fill_viridis(option = "turbo") +
  scale_x_continuous(breaks = c(1, 5, 10, 15)) +
  scale_y_continuous(limits = c(0, NA), breaks = c(0, 0.3, 0.6)) +
  ylab("Proportion") + 
  guides(fill = "none") +
  facet_wrap(~ Year, ncol = 4, dir = "v") +
  theme(strip.text.x = element_blank()) +
  geom_text(x = 13, y = 0.45, aes(label = Year), 
            color = "grey30", size = 2.8)
prop_plot
```

```{r comp_ats}
#| echo: false
#| warnings: FALSE
#| messages: FALSE
#| label: fig-comp_ats
#| fig.cap: "Model results comparing last year's selected model -2021)"
# Set working directory & plot save directory
proportions <- data.frame(modlst[[2]]$pobs_ats)
prop_ftnir <- data.frame(modlst[[3]]$pobs_ats)

names(prop_ftnir)[1:16] <- c("Year",1:15)
names(proportions)[1:16] <- c("Year",1:15)
props <- pivot_longer(proportions, cols=2:16, 
              names_to = "Age", values_to = "Proportion") |>
  mutate(Age=as.numeric(Age), 
         Proportion=ifelse(Year==2020,0,Proportion)) |> 
         filter(Age>1, Age<11)
prop_ftnir <- pivot_longer(prop_ftnir, cols=2:16, 
              names_to = "Age", values_to = "Proportion") |>
  mutate(Age=as.numeric(Age),
         Proportion=ifelse(Year==2020,0,Proportion)) |> 
         filter(Age>1,Age<11)
# Only EBS age comp
props_ebs <- props %>% filter(Year>1979) |> 
  arrange(Year, Age)
props_ftnir <- prop_ftnir %>% filter(Year>1979) |> 
  arrange(Year, Age)

# Set up shifting colors for each year to track cohorts
colors <- rep(1:16, length(1980:2024))
props_ebs$color <- colors[1:nrow(props_ebs)]
props_ftnir$color <- colors[1:nrow(props_ftnir)]

prop_plot <- ggplot(props_ebs, aes(x = Age, y = Proportion, fill = color)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_line(data = props_ftnir, aes(x = Age, y = Proportion),  size = .5) +  
  scale_fill_viridis(option = "turbo") +
  scale_x_continuous(breaks = c(2, 4, 6, 8, 10)) +
  scale_y_continuous(limits = c(0, NA), breaks = c(0, 0.3, 0.6)) +
  ylab("Proportion") + 
  guides(fill = "none") +
  facet_wrap(~ Year, ncol = 4, dir = "v") +
  theme(strip.text.x = element_blank()) +
  geom_text(x = 8, y = 0.55, aes(label = Year), 
            color = "grey30", size = 3.8)
prop_plot
```

# Fit to models

```{r modfits, results = "asis",echo=FALSE}
#| output: asis
#| echo: false
# Fit to data-------------------
df <- tab_fit(modlst[c(2,4,3)])
tab <- xtable::xtable(df,
  caption = "\\label{tbl:modfits}Goodness-of-fit measures to primary data for different data and age-error applications.
RMSE=root-mean square log errors, NLL=negative log-likelihood, SDNR=standard deviation of normalized residuals,
Eff. N=effective sample size for composition data). See text for incremental model descriptions.",
  label = "tbl:modfits", digits = 2, align = paste0("ll", paste0(rep("r", length(df) - 1), collapse = ""))
)
hlines <- c(-1, 0, 4, 7, 10, 17, nrow(tab) - 2, nrow(tab))
print(tab,
  caption.placement = "top",
  hline.after = hlines, comment = FALSE,
  include.rownames = FALSE, sanitize.text.function = function(x) { x }
)

flextable::flextable(tab_fit(modlst,mod_scen=c(2:4)))


```
